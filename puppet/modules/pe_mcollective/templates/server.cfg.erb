# Centrally managed by Puppet version <%= @puppetversion %>
topicprefix     = /topic/
main_collective = mcollective
collectives     = mcollective
libdir          = <%= @plugin_libdir %>
logfile         = <%= @server_logfile %>
loglevel        = info
<% if @operatingsystem == 'AIX' -%>
daemonize       = 0
<% else -%>
daemonize       = 1
<% end -%>

identity = <%= @clientcert %>
# Plugins
securityprovider           = ssl
plugin.ssl_server_private = <%= @private_key_path %>
plugin.ssl_server_public = <%= @public_key_path %>
plugin.ssl_client_cert_dir = <%= @client_cert_dir %>
plugin.ssl_serializer     = yaml

connector = activemq
plugin.activemq.pool.size = <%= @stomp_servers.count %>
<% @stomp_servers.each_with_index do |server,index| -%>
plugin.activemq.pool.<%= index + 1 %>.host = <%= server %>
plugin.activemq.pool.<%= index + 1 %>.port = <%= @stomp_port %>
plugin.activemq.pool.<%= index + 1 %>.user = <%= @stomp_user %>
plugin.activemq.pool.<%= index + 1 %>.password = <%= @stomp_password %>
plugin.activemq.pool.<%= index + 1 %>.ssl = <%= @mcollective_enable_stomp_ssl %>
plugin.activemq.pool.<%= index + 1 %>.ssl.ca = <%= @cacert_path %>
plugin.activemq.pool.<%= index + 1 %>.ssl.key = <%= @private_key_path %>
plugin.activemq.pool.<%= index + 1 %>.ssl.cert = <%= @cert_path %>
<% end -%>

# Facts
factsource = yaml
plugin.yaml = <%= @mco_etc %>/facts.yaml

# Puppet Classes
<% if @operatingsystem == 'windows' -%>
classesfile = <%= @common_appdata %>/PuppetLabs/puppet/var/state/classes.txt
<% elsif @operatingsystem == 'AIX' -%>
classesfile = /opt/freeware/var/lib/pe-puppet/classes.txt
<% else -%>
classesfile = /var/opt/lib/pe-puppet/classes.txt
<% end -%>

# Puppet Agent plugin configuration
<% if @operatingsystem == 'windows' -%>
plugin.puppet.command = "<%= @env_windows_installdir %>/bin/puppet.bat" agent
plugin.puppet.windows_service = pe-puppet
<% else -%>
plugin.puppet.command = /opt/puppet/bin/puppet agent
plugin.puppet.config  = /etc/puppetlabs/puppet/puppet.conf
<% end -%>

plugin.puppet.splay = true
plugin.puppet.splaylimit = 120

# Periodcally broadcast metdata for registration purposes.
# This registration plugin will broadcast current Facter fact values.
registration = Meta
# registerinterval is intentionally "long" to prevent systems from being overly
# chatty on the message bus by default.  If you want a higher frequency, this
# may be set to 300 (5 minutes)
registerinterval = <%= @mcollective_registerinterval %>

# authorization
rpcauthorization = 1
rpcauthprovider = action_policy
plugin.actionpolicy.allow_unconfigured = 1
direct_addressing = 1
